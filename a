import difflib
import argparse
import json


def calculate_similarity(a, b, level="line"):
    """2つのテキストの一致率を計算"""
    if level == "line":
        seq_a = a.splitlines()
        seq_b = b.splitlines()
    elif level == "word":
        seq_a = a.split()
        seq_b = b.split()
    else:
        seq_a = list(a)
        seq_b = list(b)

    sm = difflib.SequenceMatcher(None, seq_a, seq_b)
    return sm.ratio() * 100


def generate_diff(file1, file2, ignore_whitespace=False):
    """ファイル間の差分を生成"""
    with open(file1, 'r', encoding='utf-8') as f1, open(file2, 'r', encoding='utf-8') as f2:
        lines1 = f1.readlines()
        lines2 = f2.readlines()

        if ignore_whitespace:
            lines1 = [line.strip() for line in lines1]
            lines2 = [line.strip() for line in lines2]

    diff = difflib.unified_diff(lines1, lines2, lineterm='')
    return list(diff)


def save_diff_as_json(diff, output_file):
    """差分をJSON形式で保存"""
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(diff, f, indent=4, ensure_ascii=False)


def main():
    parser = argparse.ArgumentParser(description="Text Compare Tool")
    parser.add_argument("file1", help="1つ目のファイル")
    parser.add_argument("file2", help="2つ目のファイル")
    parser.add_argument("--ignore-whitespace", action="store_true", help="空白を無視する")
    parser.add_argument("--output-json", help="差分をJSON形式で保存するファイルパス")
    parser.add_argument("--similarity-level", choices=["line", "word", "char"], default="line", help="一致率の計算レベル")
    args = parser.parse_args()

    # 差分の生成
    diff = generate_diff(args.file1, args.file2, args.ignore_whitespace)

    # 結果を表示
    print("=== 差分 ===")
    for line in diff:
        if line.startswith('+'):
            print(f"\033[92m{line}\033[0m", end="")  # 緑
        elif line.startswith('-'):
            print(f"\033[91m{line}\033[0m", end="")  # 赤
        else:
            print(line, end="")

    # 一致率を計算して表示
    with open(args.file1, 'r', encoding='utf-8') as f1, open(args.file2, 'r', encoding='utf-8') as f2:
        content1 = f1.read()
        content2 = f2.read()
        similarity = calculate_similarity(content1, content2, args.similarity_level)
        print(f"\n\n一致率（{args.similarity_level}レベル）: {similarity:.2f}%")

    # JSON形式で保存
    if args.output_json:
        save_diff_as_json(diff, args.output_json)
        print(f"\n差分をJSON形式で保存しました: {args.output_json}")


if __name__ == "__main__":
    main()
